# %%

import matplotlib.pyplot as plt
import numpy as np

cybench_ttfs = np.array(
    [
        2,
        11,
        35,
        105,
        244,
        42,
        65,
        9,
        7,
        4,
        120,
        75,
        6,
        20,
        368,
        9,
        29,
        133,
        159,
        5,
        84,
        45,
        51,
        9,
        454,
        54,
        204,
        356,
        330,
        78,
        52,
        43,
        42,
        32,
        6,
        123,
        132,
        85,
        11,
        60,
    ]
)

fig, ax = plt.subplots(1, 2, figsize=(10, 3))

fig.suptitle("Cybench")

ax1, ax2 = ax

ax1.hist(cybench_ttfs, bins=10, density=True)
ax1.set_title("Time to finish tasks")
ax1.set_xlabel("Time to finish (minutes)")
ax1.set_ylabel("Proportion of tasks")


ax2.hist(np.log(cybench_ttfs), bins=10, density=True)
ax2.set_title("Log time to finish tasks")
ax2.set_xlabel("Log time to finish (minutes)")
ax2.set_ylabel("Proportion of tasks")

gaia_ttfs = np.array(
    [
        1,
        15,
        1,
        12,
        8,
        8,
        2,
        5,
        5,
        60,
        1,
        5,
        30,
        1,
        5,
        15,
        2,
        5,
        5,
        5,
        5,
        5,
        5,
        1,
        5,
        5,
        10,
        5,
        10,
    ]
)

print("Gaia Tasks", len(gaia_ttfs))

fig, ax = plt.subplots(1, 2, figsize=(10, 3))
fig.suptitle("Gaia")
ax1, ax2 = ax

ax1.hist(gaia_ttfs, bins=10, density=True)
ax1.set_title("Time to finish tasks")
ax1.set_xlabel("Time to finish (minutes)")
ax1.set_ylabel("Proportion of tasks")


ax2.hist(np.log(gaia_ttfs), bins=10, density=True)
ax2.set_title("Log time to finish tasks")
ax2.set_xlabel("Log time to finish (minutes)")
ax2.set_ylabel("Proportion of tasks")


metr_public_task_ttfs = [
    0,
    0,
    0,
    0,
    15,
    0,
    300,
    7,
    360,
    20,
    10,
    210,
    210,
    15,
    15,
    15,
    0,
    480,
    0,
    0,
    0,
    480,
    5,
    5,
    15,
    45,
    480,
    60,
    5,
    0,
    0,
    0,
    75,
    300,
    0,
    0,
]

metr_public_task_included = [
    "No",
    "No",
    "No",
    "No",
    "Yes",
    "No",
    "Yes",
    "Yes",
    "No",
    "Yes",
    "Yes",
    "Yes",
    "No",
    "Yes",
    "Yes",
    "Yes",
    "No",
    "Maybe",
    "No",
    "No",
    "No",
    "Maybe",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Maybe",
    "Yes",
    "Yes",
    "No",
    "No",
    "No",
    "No",
    "No",
    "No",
    "No",
]

metr_public_task_ttfs = np.array(
    [
        t
        for t, included in zip(metr_public_task_ttfs, metr_public_task_included)
        if included == "Yes"
    ]
)

fig, ax = plt.subplots(1, 2, figsize=(10, 3))
fig.suptitle("Metr public task")
ax1, ax2 = ax

ax1.hist(metr_public_task_ttfs, bins=10, density=True)
ax1.set_title("Time to finish tasks")
ax1.set_xlabel("Time to finish (minutes)")
ax1.set_ylabel("Proportion of tasks")

ax2.hist(np.log(metr_public_task_ttfs), bins=10, density=True)
ax2.set_title("Log time to finish tasks")
ax2.set_xlabel("Log time to finish (minutes)")
ax2.set_ylabel("Proportion of tasks")

print("METR Public Tasks", len(metr_public_task_ttfs))

all_task_included = [
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Maybe",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "No",
    "No",
    "No",
    "No",
    "No",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "No",
    "Yes",
    "Yes",
    "Yes",
    "No",
    "No",
    "No",
    "Yes",
    "No",
    "Yes",
    "No",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "No",
    "Yes",
    "Yes",
    "Yes",
    "No",
    "No",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "No",
    "No",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "No",
    "No",
    "No",
    "No",
    "No",
    "No",
    "Yes",
    "No",
    "Yes",
    "Yes",
    "No",
    "Yes",
    "Yes",
    "Yes",
    "No",
    "Yes",
    "Yes",
    "Yes",
    "No",
    "Maybe",
    "No",
    "No",
    "No",
    "Maybe",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Maybe",
    "Yes",
    "Yes",
    "No",
    "No",
    "No",
    "No",
    "No",
    "No",
    "No",
    "No",
    "Maybe",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
    "Yes",
]

all_task_ttfs = [
    2,
    11,
    35,
    105,
    244,
    42,
    65,
    9,
    7,
    4,
    120,
    75,
    6,
    20,
    368,
    9,
    29,
    133,
    159,
    5,
    84,
    45,
    51,
    9,
    454,
    54,
    204,
    356,
    330,
    78,
    52,
    43,
    42,
    32,
    6,
    123,
    132,
    85,
    11,
    60,
    30,
    30,
    30,
    30,
    30,
    30,
    30,
    30,
    30,
    30,
    30,
    30,
    30,
    7,
    7,
    0,
    7,
    7,
    7,
    0,
    0,
    0,
    7,
    0,
    7,
    0,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    0,
    7,
    2,
    7,
    0,
    0,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    0,
    0,
    1,
    15,
    1,
    12,
    8,
    8,
    2,
    5,
    5,
    60,
    1,
    5,
    30,
    1,
    5,
    15,
    2,
    5,
    5,
    5,
    5,
    5,
    5,
    1,
    5,
    5,
    10,
    5,
    10,
    0,
    0,
    0,
    0,
    0,
    0,
    15,
    0,
    300,
    7,
    360,
    20,
    10,
    210,
    210,
    15,
    15,
    15,
    0,
    480,
    0,
    0,
    0,
    480,
    5,
    5,
    15,
    45,
    480,
    60,
    5,
    0,
    0,
    0,
    75,
    300,
    0,
    0,
    0,
    0,
    7,
    37,
    7,
    37,
    37,
    37,
    7,
]

assert len(all_task_ttfs) == len(all_task_included)

all_task_ttfs = np.array(
    [t for t, included in zip(all_task_ttfs, all_task_included) if included == "Yes"]
)

print("All Tasks", len(all_task_ttfs))
fig, ax = plt.subplots(1, 2, figsize=(10, 3))
fig.suptitle("All tasks")
ax1, ax2 = ax

ax1.hist(all_task_ttfs, bins=10, density=True)
ax1.set_title("Time to finish tasks")
ax1.set_xlabel("Time to finish (minutes)")
ax1.set_ylabel("Proportion of tasks")

ax2.hist(np.log(all_task_ttfs), bins=10, density=True)
ax2.set_title("Log time to finish tasks")
ax2.set_xlabel("Log time to finish (minutes)")
ax2.set_ylabel("Proportion of tasks")
